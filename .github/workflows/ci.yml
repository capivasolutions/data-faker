name: CI Pipeline

on:
  push:
    branches: [master, dev]
  pull_request:
    branches: [master, dev]

jobs:
  container-job:
    runs-on: ubuntu-latest
    container: node:16.14.0-alpine
    strategy:
      matrix:
        NODE_VERSION:
          - 16.14.0
        POSTGRES_USER:
          - postgres
        POSTGRES_PASSWORD:
          - postgres
        POSTGRES_DB:
          - pocket_library
        DATABASE_URL:
          - postgresql://postgres:postgres@postgres:5432/pocket_library?schema=public
        TOKEN_KEY:
          - secret
        ARCHIVES_DIRECTORY:
          - tmp
        STORAGE_TYPE:
          - local
        JWT_SECRET:
          - secret
        JWT_EXPIRES_IN:
          - 30s
    services:
      postgres:
        image: postgres:14.5-alpine
        env:
          POSTGRES_USER: ${{ matrix.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ matrix.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ matrix.POSTGRES_DB }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.NODE_VERSION }}
          cache: "yarn"
      - name: Install dependencies
        run: yarn
      - name: Check code lint
        run: yarn lint
      - name: Run unit tests
        run: yarn test
        env:
          STORAGE_TYPE: ${{ matrix.STORAGE_TYPE }}
          ARCHIVES_DIRECTORY: ${{ matrix.ARCHIVES_DIRECTORY }}
      - name: Prepare database
        run: |
          yarn prisma migrate dev
          yarn prisma generate
        env:
          DATABASE_URL: ${{ matrix.DATABASE_URL }}
      - name: Run e2e tests
        run: yarn test:e2e
        env:
          DATABASE_URL: ${{ matrix.DATABASE_URL }}
          TOKEN_KEY: ${{ matrix.TOKEN_KEY }}
          ARCHIVES_DIRECTORY: ${{ matrix.ARCHIVES_DIRECTORY }}
          STORAGE_TYPE: ${{ matrix.STORAGE_TYPE }}
          JWT_SECRET: ${{ matrix.JWT_SECRET }}
          JWT_EXPIRES_IN: ${{ matrix.JWT_EXPIRES_IN }}
      - name: Build
        run: yarn build
